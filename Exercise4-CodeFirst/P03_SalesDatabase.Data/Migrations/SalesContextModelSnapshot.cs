// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P03_SalesDatabase.Data;

namespace P03_SalesDatabase.Data.Migrations
{
    [DbContext(typeof(SalesContext))]
    partial class SalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreditCardNumber");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(100)")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(250)")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasDefaultValue("No description");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(50)")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<decimal>("Price")
                        .HasColumnType("SMALLMONEY");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new { ProductId = 1, Name = "Samsung Business Keyboard", Price = 365.44m, Quantity = 4m },
                        new { ProductId = 2, Name = "Gigabyte Business Sound Card", Price = 510.97m, Quantity = 1m },
                        new { ProductId = 3, Name = "ASUS Gaming Sound Card", Price = 240.04m, Quantity = 8m },
                        new { ProductId = 4, Name = "Gigabyte Science Motherboard", Price = 419.22m, Quantity = 5m },
                        new { ProductId = 5, Name = "MSI Gaming Keyboard", Price = 586.33m, Quantity = 7m },
                        new { ProductId = 6, Name = "Logitech Gaming Monitor", Price = 422.22m, Quantity = 3m },
                        new { ProductId = 7, Name = "ASUS Gaming Graphics Card", Price = 505.89m, Quantity = 4m },
                        new { ProductId = 8, Name = "AMD Business Mouse", Price = 330.14m, Quantity = 5m },
                        new { ProductId = 9, Name = "AMD Gaming Graphics Card", Price = 129.83m, Quantity = 10m },
                        new { ProductId = 10, Name = "Intel Science Graphics Card", Price = 679.69m, Quantity = 6m },
                        new { ProductId = 11, Name = "Gigabyte Business Monitor", Price = 215.47m, Quantity = 1m },
                        new { ProductId = 12, Name = "Cooler Master Gaming Chassis", Price = 576.11m, Quantity = 6m },
                        new { ProductId = 13, Name = "Samsung Gaming Keyboard", Price = 428.01m, Quantity = 6m },
                        new { ProductId = 14, Name = "Intel Business Mouse", Price = 239.84m, Quantity = 1m },
                        new { ProductId = 15, Name = "AMD Business Sound Card", Price = 386.18m, Quantity = 2m },
                        new { ProductId = 16, Name = "Cooler Master Gaming Keyboard", Price = 300.69m, Quantity = 7m },
                        new { ProductId = 17, Name = "MSI Business Processor", Price = 208.63m, Quantity = 3m },
                        new { ProductId = 18, Name = "Logitech Business Chassis", Price = 389.25m, Quantity = 8m },
                        new { ProductId = 19, Name = "Gigabyte Science Mouse", Price = 407.16m, Quantity = 4m },
                        new { ProductId = 20, Name = "AMD Business Graphics Card", Price = 622.48m, Quantity = 6m }
                    );
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ProductId");

                    b.Property<int>("StoreId");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(80)")
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.HasKey("StoreId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.HasOne("P03_SalesDatabase.Data.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P03_SalesDatabase.Data.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P03_SalesDatabase.Data.Models.Store", "Store")
                        .WithMany("Sales")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
